// Shorthands to help writing easier to understand code.

@mixin font-face(
  $family,
  $file,
  $weight: 'normal',
  $style: 'normal',
  $woff2: true,
  $base-path: '../assets/fonts/'
) {
  @font-face {
    font-display: swap;
    font-family: $family;
    font-style: unquote($style);
    font-weight: unquote($weight);
    @if $woff2 {
      src: url($base-path+$file+'.woff2') format('woff2'),
        url($base-path+$file+'.woff') format('woff');
    } @else {
      src: url($base-path+$file+'.woff') format('woff');
    }
  }
}

@mixin center(
  $max-width: $container-max-width,
  $padding: $container-padding-mobile
) {
  display: block;
  margin-left: auto;
  margin-right: auto;
  max-width: $max-width;
  padding-left: $padding;
  padding-right: $padding;
}

@mixin reset-content-margins($direction: 'both') {
  @if ($direction == 'both' or $direction == 'top') {
    > :first-child {
      margin-top: 0;
      padding-top: 0;
    }
  }

  @if ($direction == 'both' or $direction == 'bottom') {
    > :last-child {
      margin-bottom: 0;
      padding-bottom: 0;
    }
  }
}

@mixin reset-list {
  display: block;
  list-style: none;
  margin: 0;
  padding: 0;
}

@mixin reset-list-flex {
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
* Grid Mixin
*
* Applies a flexbox grid to a container element. All direct children will be modified to create a column based grid.
*/
@mixin grid(
  $columns,
  $alignment: flex-start,
  $gutter-horizontal: $gap,
  $gutter-vertical: $gap
) {
  display: flex;
  flex-wrap: wrap;
  justify-content: $alignment;
  width: 100%;

  > * {
    width: calc((#{100% / $columns}) -
    (#{$columns - 1} / #{$columns} * #{$gutter-horizontal}));

    &:nth-child(n) {
      margin-right: $gutter-horizontal;
      margin-top: 0;
    }

    &:nth-child(1n + #{$columns + 1}) {
      margin-top: $gutter-vertical;
    }

    &:nth-child(#{$columns}n) {
      margin-right: 0;
    }

    &:last-child {
      margin-right: 0;
    }
  }
}

@mixin reset-grid {
  display: block;

  > * {
    width: auto;

    &:nth-child(n) {
      margin-right: 0;
      margin-top: 0;
    }
  }
}


@mixin cursor-blue {
  cursor: url("data:image/svg+xml;utf8, <svg width='18' height='21' viewBox='0 0 18 21' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M17.32 10.6904L0 0.69043V20.6904L17.32 10.6904Z' fill='%230060FF'/></svg>"), auto;
}


@mixin cursor-black {
  cursor: url("data:image/svg+xml;utf8, <svg width='18' height='21' viewBox='0 0 18 21' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M17.32 10.6904L0 0.69043V20.6904L17.32 10.6904Z' fill='black'/></svg>"), auto;
}

@mixin cursor-white {
  cursor: url("data:image/svg+xml;utf8, <svg width='18' height='21' viewBox='0 0 18 21' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M17.32 10.6904L0 0.69043V20.6904L17.32 10.6904Z' fill='white'/></svg>"), auto;
}
